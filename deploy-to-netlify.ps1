# Script de d√©ploiement automatique vers Netlify
# Lloyds GO! - Application bancaire et crypto

Write-Host "üöÄ D√©ploiement vers Netlify - Lloyds GO!" -ForegroundColor Green
Write-Host "================================================" -ForegroundColor Green

# V√©rifier si Netlify CLI est install√©
try {
    $netlifyVersion = netlify --version
    Write-Host "‚úÖ Netlify CLI d√©tect√©: $netlifyVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Netlify CLI non trouv√©. Installation..." -ForegroundColor Red
    Write-Host "Veuillez installer Netlify CLI avec: npm install -g netlify-cli" -ForegroundColor Yellow
    exit 1
}

# V√©rifier si nous sommes dans le bon r√©pertoire
if (-not (Test-Path "netlify.toml")) {
    Write-Host "‚ùå Fichier netlify.toml non trouv√©. Veuillez ex√©cuter ce script depuis le dossier deploy." -ForegroundColor Red
    exit 1
}

# V√©rifier les d√©pendances
Write-Host "üì¶ V√©rification des d√©pendances..." -ForegroundColor Blue
if (-not (Test-Path "node_modules")) {
    Write-Host "üì• Installation des d√©pendances..." -ForegroundColor Blue
    npm install
    if ($LASTEXITCODE -ne 0) {
        Write-Host "‚ùå Erreur lors de l'installation des d√©pendances" -ForegroundColor Red
        exit 1
    }
}

# V√©rifier les fichiers essentiels
$requiredFiles = @(
    "index.html",
    "functions/api.js",
    "js/apiManager.js",
    "users.json",
    "netlify.toml"
)

foreach ($file in $requiredFiles) {
    if (-not (Test-Path $file)) {
        Write-Host "‚ùå Fichier manquant: $file" -ForegroundColor Red
        exit 1
    }
}

Write-Host "‚úÖ Tous les fichiers requis sont pr√©sents" -ForegroundColor Green

# V√©rifier la configuration Netlify
Write-Host "üîß V√©rification de la configuration Netlify..." -ForegroundColor Blue

# Cr√©er un fichier .env temporaire pour le d√©ploiement
$envContent = @"
NODE_ENV=production
JWT_SECRET=lloyds-go-production-secret-$(Get-Random)
COINGECKO_API_URL=https://api.coingecko.com/api/v3
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100
LOG_LEVEL=info
"@

$envContent | Out-File -FilePath ".env" -Encoding UTF8
Write-Host "‚úÖ Fichier .env cr√©√© pour le d√©ploiement" -ForegroundColor Green

# D√©ploiement vers Netlify
Write-Host "üöÄ D√©ploiement en cours..." -ForegroundColor Blue

try {
    # D√©ployer avec Netlify CLI
    netlify deploy --prod --dir=.
    
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ D√©ploiement r√©ussi!" -ForegroundColor Green
        Write-Host "üåê Votre application est maintenant en ligne sur Netlify" -ForegroundColor Green
        
        # Afficher les informations du site
        Write-Host "üìã Pour voir les informations du site, ex√©cutez: netlify status" -ForegroundColor Blue
        
    } else {
        Write-Host "‚ùå Erreur lors du d√©ploiement" -ForegroundColor Red
        exit 1
    }
} catch {
    Write-Host "‚ùå Erreur lors du d√©ploiement: $($_.Exception.Message)" -ForegroundColor Red
    exit 1
} finally {
    # Nettoyer le fichier .env temporaire
    if (Test-Path ".env") {
        Remove-Item ".env"
        Write-Host "üßπ Fichier .env temporaire supprim√©" -ForegroundColor Blue
    }
}

Write-Host "üéâ D√©ploiement termin√© avec succ√®s!" -ForegroundColor Green
Write-Host "================================================" -ForegroundColor Green
